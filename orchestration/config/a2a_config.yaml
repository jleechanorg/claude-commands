# A2A SDK Configuration for Orchestrator Framework
# This configuration enables standardized agent-to-agent communication
# while maintaining compatibility with existing Redis infrastructure

# Redis Transport Configuration
redis:
  host: localhost
  port: 6379
  db: 0
  password: null
  connection_pool:
    max_connections: 50
    retry_on_timeout: true
    socket_keepalive: true
    socket_keepalive_options: {}

# A2A Agent Registry Configuration
agent_registry:
  # Redis key prefix for agent registration
  key_prefix: "a2a:agents"

  # Agent heartbeat configuration
  heartbeat:
    interval: 30  # seconds
    timeout: 90   # seconds - consider agent dead after this
    cleanup_interval: 300  # seconds - how often to clean up dead agents

  # Agent capability system
  capabilities:
    key_prefix: "a2a:capabilities"
    auto_discovery: true
    cache_ttl: 300  # seconds

# Message Queue Configuration
message_queues:
  key_prefix: "a2a:messages"

  # Message retention
  retention:
    default_ttl: 3600  # 1 hour
    max_queue_size: 1000
    cleanup_interval: 300

  # Message routing
  routing:
    enable_load_balancing: true
    retry_attempts: 3
    retry_delay: 5  # seconds
    dead_letter_queue: true

# Pub/Sub Configuration
pubsub:
  topic_prefix: "a2a:topic"

  # Topic management
  topics:
    auto_create: true
    cleanup_unused: true
    cleanup_interval: 3600  # 1 hour

  # Subscription management
  subscriptions:
    max_per_agent: 50
    heartbeat_topics:
      - "agent.heartbeat"
      - "system.status"

# Protocol Configuration
protocols:
  # Task Execution Protocol
  task_execution:
    enabled: true
    timeout: 300  # 5 minutes default
    retry_policy:
      max_attempts: 3
      backoff_strategy: "exponential"
      base_delay: 1  # seconds
      max_delay: 60  # seconds

  # Capability Negotiation Protocol
  capability_negotiation:
    enabled: true
    discovery_timeout: 10  # seconds
    negotiation_timeout: 30  # seconds
    cache_results: true
    cache_ttl: 300  # 5 minutes

  # Workflow Orchestration Protocol
  workflow_orchestration:
    enabled: true
    max_concurrent_workflows: 100
    step_timeout: 300  # 5 minutes default
    global_timeout: 3600  # 1 hour default
    state_persistence: true
    state_cleanup_interval: 3600  # 1 hour

# Backward Compatibility Configuration
backward_compatibility:
  # Enable compatibility with existing MessageBroker interface
  enable_legacy_interface: true

  # Legacy message format translation
  message_translation:
    auto_convert: true
    preserve_metadata: true

  # Legacy agent support during migration
  legacy_agent_support:
    enabled: true
    timeout: 60  # seconds to wait for legacy responses
    fallback_to_redis: true

# Monitoring and Logging Configuration
monitoring:
  # Metrics collection
  metrics:
    enabled: true
    collection_interval: 60  # seconds
    retention_period: 3600   # 1 hour (was 24 hours)

    # Metrics to collect
    collect:
      - message_count
      - agent_count
      - workflow_count
      - response_times
      - error_rates

  # Health checks
  health_checks:
    enabled: true
    interval: 30  # seconds
    endpoints:
      - redis_connection
      - agent_registry
      - message_queues
      - protocols

  # Logging configuration
  logging:
    level: INFO
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

    # Log rotation
    rotation:
      max_size: 10485760  # 10MB
      backup_count: 5

    # Component-specific logging
    components:
      adapter: INFO
      protocols: INFO
      workflows: DEBUG
      monitoring: WARNING

# Performance Configuration
performance:
  # Connection pooling
  connection_pooling:
    enabled: true
    pool_size: 20
    max_overflow: 10
    pool_timeout: 30

  # Message batching
  message_batching:
    enabled: true
    batch_size: 10
    batch_timeout: 1  # seconds

  # Caching
  caching:
    enabled: true

    # Cache configurations
    agent_cache:
      size: 1000
      ttl: 300  # 5 minutes

    capability_cache:
      size: 500
      ttl: 600  # 10 minutes

    message_cache:
      size: 5000
      ttl: 60  # 1 minute

# Security Configuration
security:
  # Authentication (future enhancement)
  authentication:
    enabled: false
    method: "token"  # or "certificate"
    token_validation: true

  # Authorization (future enhancement)
  authorization:
    enabled: false
    rbac: true
    capability_based: true

  # Message encryption (future enhancement)
  encryption:
    enabled: false
    algorithm: "AES-256"
    key_rotation: false

# Development and Testing Configuration
development:
  # Debug mode
  debug_mode: false

  # Testing support
  testing:
    # All testing uses real agents and real operations
    use_real_agents: true
    use_real_redis: true
    enable_integration_tests: true

  # Development tools
  tools:
    message_inspector: false
    protocol_debugger: false
    workflow_visualizer: false

# Migration Configuration
migration:
  # Gradual migration settings
  gradual_migration:
    enabled: true
    migration_percentage: 100  # Start with 100% A2A
    fallback_enabled: true

  # Migration phases
  phases:
    phase1:
      name: "Basic A2A Integration"
      components: ["adapter", "basic_protocols"]
      rollback_enabled: true

    phase2:
      name: "Enhanced Communication"
      components: ["workflows", "capability_negotiation"]
      rollback_enabled: true

    phase3:
      name: "Complete Migration"
      components: ["advanced_protocols", "legacy_removal"]
      rollback_enabled: false
